<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EditSchedule" xml:space="preserve">
    <value>Edit Schedule</value>
    <comment>In MainPage.xaml</comment>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
    <comment>In MainPage.xaml, In SchedulePage.xaml</comment>
  </data>
  <data name="NoSaveScheduleFound" xml:space="preserve">
    <value>No save schedule found!</value>
    <comment>In LoadSchedulePage.xaml</comment>
  </data>
  <data name="DeleteSelectedSchedule" xml:space="preserve">
    <value>Delete selected schedule</value>
    <comment>In LoadSchedulePage.xaml</comment>
  </data>
  <data name="LoadSelectedSchedule" xml:space="preserve">
    <value>Load selected schedule</value>
    <comment>In LoadSchedulePage.xaml</comment>
  </data>
  <data name="EnterShiftCyclePattern" xml:space="preserve">
    <value>Enter shift cycle pattern:</value>
    <comment>In PickerDatePage.xaml</comment>
  </data>
  <data name="EnterFirstShift" xml:space="preserve">
    <value>Enter first shift:</value>
    <comment>In PickerDatePage.xaml</comment>
  </data>
  <data name="SelectFirstShift" xml:space="preserve">
    <value>Select First Shift</value>
    <comment>In PickerDatePage.xaml</comment>
  </data>
  <data name="GenerateSchedule" xml:space="preserve">
    <value>Generate Schedule</value>
    <comment>In PickerDatePage.xaml</comment>
  </data>
  <data name="SelectShiftPattern" xml:space="preserve">
    <value>Select Shift Pattern</value>
    <comment>In PickDatePage.xaml</comment>
  </data>
  <data name="SelectTotalShiftHours" xml:space="preserve">
    <value>Select Total Shift Hours:</value>
    <comment>In PickDatePage.xaml</comment>
  </data>
  <data name="SelectStartingDayWorkCycle" xml:space="preserve">
    <value>Select the starting day of your work cycle:</value>
    <comment>In PickDatePage.xaml</comment>
  </data>
  <data name="SelectStartingTimeForDayShift" xml:space="preserve">
    <value>Select the starting time for the Day Shift:</value>
    <comment>In PickDatePage.xaml</comment>
  </data>
  <data name="SelectStartingTimeForNigthShift" xml:space="preserve">
    <value>Select the starting time for the Night Shift:</value>
    <comment>In PickDatePage.xaml</comment>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
    <comment>In PropertyPage.xaml</comment>
  </data>
  <data name="CompensateSelectedShift" xml:space="preserve">
    <value>Compensate</value>
    <comment>In SchedulePage.xaml</comment>
  </data>
  <data name="MarkSelectedShiftSickLeave" xml:space="preserve">
    <value>Sick Leave</value>
    <comment>In SchedulePage.xaml</comment>
  </data>
  <data name="MarkSelectedShiftPaidUnpaidLeave" xml:space="preserve">
    <value>Paid/Unpaid Leave</value>
    <comment>In SchedulePage.xaml</comment>
  </data>
  <data name="EditSelectedShift" xml:space="preserve">
    <value>Edit</value>
    <comment>In SchedulePage.xaml</comment>
  </data>
  <data name="SaveSchedule" xml:space="preserve">
    <value>Save Schedule</value>
    <comment>In SchedulePage.xaml</comment>
  </data>
  <data name="GoBackToMain" xml:space="preserve">
    <value>Go Back to Main</value>
    <comment>In SchedulePage.xaml</comment>
  </data>
  <data name="WelcomeToTheWorkChronicle" xml:space="preserve">
    <value>Work Chronicle</value>
    <comment>InMainPage.xaml</comment>
  </data>
  <data name="EditAndSaveSchedule" xml:space="preserve">
    <value>Edit and Save Schedule</value>
    <comment>In SchedulePage.xaml</comment>
  </data>
  <data name="LoadaSavedSchedule" xml:space="preserve">
    <value>Select a saved schedule</value>
    <comment>In LoadPage.xaml</comment>
  </data>
  <data name="CreateANewMonthSchedule" xml:space="preserve">
    <value>Create a month schedule</value>
    <comment>In PickerDatePage.xaml</comment>
  </data>
  <data name="CreateAYearSchedule" xml:space="preserve">
    <value>Create a year schedule</value>
    <comment>In YearSchedulePage.xaml</comment>
  </data>
  <data name="AboutTheApp" xml:space="preserve">
    <value>About the App</value>
    <comment>In AboutPage.xaml</comment>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
    <comment>In AppShell.xaml</comment>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
    <comment>In AppShell.xaml</comment>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
    <comment>In AppShell.xaml</comment>
  </data>
  <data name="ThisShiftIsNotInTheCurrentMonth" xml:space="preserve">
    <value>This shift is not in the current month.</value>
    <comment>In the MainViewModel.cs</comment>
  </data>
  <data name="ThisIsARestDay" xml:space="preserve">
    <value>This is a rest day.</value>
    <comment>In the MainViewModel.cs</comment>
  </data>
  <data name="ThisIsARestDayAndSickLeave" xml:space="preserve">
    <value>This was a rest day and sick Leave.</value>
    <comment>In the MainViewModel.cs</comment>
  </data>
  <data name="ThisIsARestDayAndPaidUnpaidLeave" xml:space="preserve">
    <value>This was a rest day and paid/unpaid Leave.</value>
    <comment>In the MainViewModel.cs</comment>
  </data>
  <data name="TextMessageThisIsACalendar" xml:space="preserve">
    <value>This is a calendar for the {0} {1}!</value>
    <comment>In the MainViewModelPage</comment>
  </data>
  <data name="TextMessageTotalHoursAreForTheMonthAndWorkingHours" xml:space="preserve">
    <value>Your total hours for the month {0} are {1} hours , the working hours for that month are: {2} hours.</value>
    <comment>In the MainViewModel.cs</comment>
  </data>
  <data name="CalendarWorkScheduleFor" xml:space="preserve">
    <value>Work Schedule for {0} {1}</value>
    <comment>In the MainViewModel.cs, In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
    <comment>In the LoadViewModel.cs</comment>
  </data>
  <data name="PleaseSelectASchedule" xml:space="preserve">
    <value>Please select a schedule.</value>
    <comment>In the LoadViewModel.cs</comment>
  </data>
  <data name="ScheduleNotFoundPleaseTryAgain" xml:space="preserve">
    <value>Schedule not found, please try again!</value>
    <comment>In LoadSchedulePage.cs</comment>
  </data>
  <data name="SomethingWentWrongPleaseTryAgain" xml:space="preserve">
    <value>Something went wrong, please try again!</value>
    <comment>In the LoadScheduleViewModel.cs, In the MainViewModel.cs</comment>
  </data>
  <data name="ScheduleDeletedSuccessfully" xml:space="preserve">
    <value>Schedule deleted successfully!</value>
    <comment>In LoadScheduleViewModel.cs</comment>
  </data>
  <data name="YouHaveLoadedTheScheduleForThe" xml:space="preserve">
    <value>You have loaded the {0} schedule for the {1}.</value>
    <comment>In LoadScheduleViewModel.cs</comment>
  </data>
  <data name="PleaseSelectAValidWorkShift" xml:space="preserve">
    <value>Please select a valid work shift!</value>
    <comment>In PickDateViewModel.cs</comment>
  </data>
  <data name="DayShift" xml:space="preserve">
    <value>Day shift</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="DayShiftSecond" xml:space="preserve">
    <value>Day shift second</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="NightShift" xml:space="preserve">
    <value>Night shift</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="NightShiftSecond" xml:space="preserve">
    <value>Night shift Second</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="InA24HourdDayScheduleCantBeSelectedAsFirstShift" xml:space="preserve">
    <value>In a 24HourDay schedule, {0} can't be select as first shift, please select {1}.</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="InADayDayScheduleCantBeSelectFirstShift" xml:space="preserve">
    <value>In a Day-Day schedule, {0} can't be select as first shift, please select {1}.</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="AnErrorOccurredWhileCalculatingTheShifts" xml:space="preserve">
    <value>An error occurred while calculating the shifts. Try again!</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="PleaseSelectAScheduleFirst" xml:space="preserve">
    <value>Please select a work schedule first!</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="LanguageChanged" xml:space="preserve">
    <value>Language</value>
    <comment>In PropertyViewModel.cs</comment>
  </data>
  <data name="TheAppLanguageHasBeenChanged" xml:space="preserve">
    <value>The app language has been changed to {0}. You need to restart the app again!</value>
    <comment>In PropertyViewModel.cs</comment>
  </data>
  <data name="TheTotalShiftHoursMustBepositiveNumber" xml:space="preserve">
    <value>The total shift hours must be a positive number!</value>
    <comment>In PickerDateViewModel.cs</comment>
  </data>
  <data name="YouHaveNoScheduleForThisMonth" xml:space="preserve">
    <value>You have no schedule for this month.</value>
    <comment>InScheduleEditViewModel.cs</comment>
  </data>
  <data name="ThisIsARestDayAndItCantBeCompensated" xml:space="preserve">
    <value>This is a rest day and it can't be compensated!</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="ThisIsASickLeaveDayAndItCantBeCompensated" xml:space="preserve">
    <value>This is a sick leave and it can't be compensated!</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="ThisIsACompensatedSiftAndFirstMustBeConvertedToWork" xml:space="preserve">
    <value>This is a compensated shift and must first be converted to a working one in order to turned to sick leave.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="ThisIsAPaidLeaveDayAndItCantBeCompensated" xml:space="preserve">
    <value>This is a paid leave and it can't be compensated!</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="SelectedShiftIsCompensated" xml:space="preserve">
    <value>The selected shift is compensated.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="SelectedShiftIsMarkedAsSickLeaveDay" xml:space="preserve">
    <value>The selected shift is marked as sick leave and saved!</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="SelectedShiftIsMarkedAsPaidUnpaidLeave" xml:space="preserve">
    <value>The selected shift is marked as in paid/unpaid leave and saved!</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="SelectedShiftIsWorkingShiftAgain" xml:space="preserve">
    <value>The selected shift is a working shift, again.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="YourShiftHasBeenEditSaveItFirst" xml:space="preserve">
    <value>Your shift has been edited. If you don't want to lose the schedule create it first!.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="YourShiftHasBeenCompensatedSaveItFirst" xml:space="preserve">
    <value>Your shift has been compensated. If you don't want to lose the schedule create it first!.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="YourShiftHasBeenMarkedAsSickLeaveSaveItFirst" xml:space="preserve">
    <value>Your shift has been marked on sick leave. If you don't want to lose the schedule create it first!</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="YourShiftHasBeenEdit" xml:space="preserve">
    <value>Your shift has been edited and saved!</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="SomethingWentWrongGeneratedNewSchedule" xml:space="preserve">
    <value>Something went wrong, generate new schedule.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="ScheduleExists" xml:space="preserve">
    <value>Schedule Exists</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="AScheduleForTheMonthAlreadyExistsToOverwrite" xml:space="preserve">
    <value>A schedule for the month {0} already exists. Do you want to overwrite it?</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="YourScheduleHasBeenSaved" xml:space="preserve">
    <value>Your schedule has been saved.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="HourMessageYouHaveHoursOfOvertime" xml:space="preserve">
    <value>You have {0} hours of overtime, you can choose which shift to compensate.</value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="HourMessageYouHaveUnderTheTotalHoursForTheMonth" xml:space="preserve">
    <value>You have {0} hours under the total hours for the month. </value>
    <comment>In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Change Language</value>
    <comment>In AppShell.xaml</comment>
  </data>
  <data name="ReportAProblem" xml:space="preserve">
    <value>Report a problem</value>
    <comment>In PropertyPage.xaml</comment>
  </data>
  <data name="ChangeTheme" xml:space="preserve">
    <value>Theme</value>
    <comment>In AppShell.xaml</comment>
  </data>
  <data name="Reminder" xml:space="preserve">
    <value>Reminder</value>
    <comment>In PropertyPage.xaml</comment>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select Language</value>
    <comment>In PropertyViewModel.cs</comment>
  </data>
  <data name="AtThisMomentWorkHoursAvailableFrom2021To2026" xml:space="preserve">
    <value>At this moment work hours are available from the year 2021 up to 2026 (included).</value>
    <comment>In the MainViewModel.cs, In the ScheduleEditViewModel.cs</comment>
  </data>
  <data name="AnErrorOccurredWhileCreatingYearSchedule" xml:space="preserve">
    <value>An error occurred while creating the year schedule. Try again!</value>
    <comment>In the YearScheduleViewModel.cs</comment>
  </data>
  <data name="CreatingYearScheduleWillOverrideDeleteSavedMonthSchedulesForYear" xml:space="preserve">
    <value>Creating a year schedule will override and delete saved month schedules for the {0} year. Do you want to continue?</value>
    <comment>In the YearScheduleViewModel.cs</comment>
  </data>
  <data name="YourWorkScheduleForTheYearHasBeenCreatedAndSaved" xml:space="preserve">
    <value>Your work schedule for the year {0} has been created and saved. You can check your month schedules in the Select saved schedules page.</value>
    <comment>In the YearScheduleViewModel.cs</comment>
  </data>
  <data name="ThisShiftMarkedOnPaidLeaveMustFirstConvertedWorking" xml:space="preserve">
    <value>This shift is marked as on paid/unpaid leave and must first be converted to a working one in order to turned to sick leave.</value>
    <comment>In ScheduleViewModel.cs</comment>
  </data>
  <data name="ThisShiftMarkedSickLeaveCannotBeMarkedAsPaidLeave" xml:space="preserve">
    <value>This shift is marked as on sick leave and cannot be marked as on paid leave!</value>
    <comment>In ScheduleViewModel.cs</comment>
  </data>
  <data name="ThiShiftMarkedSickLeaveCannotMarkedPaidUnpaidLeave" xml:space="preserve">
    <value>This shift is marked as sick leave and cannot be marked as paid/unpaid leave!</value>
    <comment>In ScheduleViewModel.cs</comment>
  </data>
  <data name="YourShiftHasBeenMarkedPaidUnpaidLeaveSaveItFirst" xml:space="preserve">
    <value>Your shift has been marked on paid/unpaid leave. If you don't want to lose the schedule save it first!</value>
    <comment>In ScheduleViewModel.cs</comment>
  </data>
  <data name="TextMessageOutOfThoseHoursYouHaveHorusOnSickLeave" xml:space="preserve">
    <value>Out of those hours you have {0} hours reported as sick leave.</value>
    <comment>In MainPageViewModel.cs, In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="TextMessageOutToseHoursYouHaveHoursReportedPaidUnpaidLeave" xml:space="preserve">
    <value>Out of those hours you have {0} hours reported as paid/unpaid leave.</value>
    <comment>In MainViewModel.cs, In ScheduleEditViewModel.cs</comment>
  </data>
  <data name="Day24Hour" xml:space="preserve">
    <value>Day 24 Hour</value>
    <comment>In PickerViewModel.cs, In YearScheduleViewModel.cs</comment>
  </data>
  <data name="DayDay" xml:space="preserve">
    <value>Day Day</value>
    <comment>In PickerViewModel.cs, In YearScheduleViewModel.cs</comment>
  </data>
  <data name="DayNight" xml:space="preserve">
    <value>Day Night</value>
    <comment>In PickerViewModel.cs, In YearScheduleViewModel.cs</comment>
  </data>
  <data name="DayNightNight" xml:space="preserve">
    <value>Day Night Night</value>
    <comment>In PickerViewModel.cs, In YearScheduleViewModel.cs</comment>
  </data>
  <data name="PressBackAgainToExit" xml:space="preserve">
    <value>Press back again to exit!</value>
    <comment>In the MainPage.cs</comment>
  </data>
  <data name="PrevNextMonth" xml:space="preserve">
    <value>Prev/Next Month </value>
    <comment>In the MainViewPage.cs</comment>
  </data>
  <data name="RestDay" xml:space="preserve">
    <value>Rest Day </value>
    <comment>In the MainViewPage.cs</comment>
  </data>
  <data name="Compensated" xml:space="preserve">
    <value>Compensated</value>
    <comment>In the MainViewPage.cs</comment>
  </data>
  <data name="SickLeave" xml:space="preserve">
    <value>Sick Leave</value>
    <comment>In the MainViewPage.cs</comment>
  </data>
  <data name="PaidUnpaidLeave" xml:space="preserve">
    <value>Paid/Unpaid</value>
    <comment>In the MainViewPage.cs</comment>
  </data>
  <data name="ThisWillDeleteTheScheduleDoContinue" xml:space="preserve">
    <value>This will delete the select schedule. Do you want to continue?</value>
    <comment>In LoadScheduleVieModel.cs</comment>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
    <comment>In AppShell.xaml.cs</comment>
  </data>
  <data name="Bulgarian" xml:space="preserve">
    <value>Bulgarian</value>
    <comment>In AppShell.xaml.cs</comment>
  </data>
  <data name="YourWorkScheduelForTheMonthHasBeenCreatedAndSaved" xml:space="preserve">
    <value>Your work schedule for the month {0} {1} has been created and saved. You can check your month schedule in the Select saved schedules page.</value>
    <comment>In PickerViewModel.cs</comment>
  </data>
  <data name="CreatingAMonthScheduleWillOverrideDeleteSavedMonthSchedule" xml:space="preserve">
    <value>Creating a month schedule will override and delete a saved month schedule for the selected month. Do you want to continue?</value>
    <comment>In PickerViewModel.cs</comment>
  </data>
  <data name="SelectTheme" xml:space="preserve">
    <value>Select Theme</value>
    <comment>In AppShell.xaml.cs</comment>
  </data>
  <data name="LightTheme" xml:space="preserve">
    <value>Light Theme</value>
    <comment>In AppShell.xaml.cs</comment>
  </data>
  <data name="SystemDefault" xml:space="preserve">
    <value>System Default</value>
    <comment>In AppShell.xaml.cs</comment>
  </data>
  <data name="DarkTheme" xml:space="preserve">
    <value>Dark Theme</value>
    <comment>In AppShell.xaml.cs</comment>
  </data>
  <data name="TheAppThemeHasBeenChanged" xml:space="preserve">
    <value>The theme has been changed.</value>
    <comment>In AppShell.xaml.cs</comment>
  </data>
</root>